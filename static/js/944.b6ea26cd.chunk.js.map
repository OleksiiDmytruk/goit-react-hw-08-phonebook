{"version":3,"file":"static/js/944.b6ea26cd.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Section/Section.jsx","redax/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.jsx","components/ContactList/ContactList.styled.js","components/Modal/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const FormStyle = styled(Form)`\n  width: 400px;\n  border-radius: 8px;\n  border: 2px solid blue;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  font-size: 10px;\n  color: orangered;\n`;\nexport const Lable = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  color: blue;\n`;\nexport const Btn = styled.button`\n  margin: 0 auto;\n  width: 30%;\n  color: blue;\n`;\n","export const Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(el =>\n      el.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { FormStyle, ErrMessage, Lable, Btn } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { selectContacts } from 'redax/contacts/selectors';\nimport { addContact } from 'redax/contacts/operations';\n\nconst nameRegex =\n  \"^[a-zA-Zа-щьюяґєіїА-ЩЬЮЯҐЄІЇ]+(([' \\\\-][a-zA-Zа-щьюяґєіїА-ЩЬЮЯҐЄІЇ ])?[a-zA-Zа-щьюяґєіїА-ЩЬЮЯҐЄІЇ]*)*$\";\nconst phoneRegex = '^([+]?[s0-9]+)?(d{3}|[(]?[0-9]+[)])?([-]?[s]?[0-9])+$';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Name is too Short!')\n    .matches(nameRegex, 'Name is not valid')\n    .required('Name is required')\n    .trim(),\n  number: Yup.string()\n    .matches(phoneRegex, 'Phone number is not valid')\n    .length(13, 'Phone number is not valid')\n    .required('Phone number is required')\n    .trim(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const isOnList = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const onAdd = contact => {\n    if (isOnList(contact.name)) {\n      toast.error(`${contact.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(contact));\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={contactSchema}\n      onSubmit={(values, actions) => {\n        onAdd(values);\n        actions.resetForm();\n      }}\n    >\n      <FormStyle>\n        <Lable>\n          Name\n          <Field name=\"name\" type=\"text\" />\n          <ErrMessage name=\"name\" component=\"div\" />\n        </Lable>\n        <Lable>\n          Number\n          <Field name=\"number\" type=\"tel\" placeholder=\"+380 11111 1111\" />\n          <ErrMessage name=\"number\" component=\"div\" />\n        </Lable>\n        <Btn type=\"submit\">Add contact</Btn>\n      </FormStyle>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  gap: 8px;\n  color: blue;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label } from './ContactFilter.styled';\nimport { changeFilter } from 'redax/contacts/filterSlice';\nimport { selectFilter } from 'redax/contacts/selectors';\n\nexport const ContactFilter = ({ title }) => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      {title}\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(changeFilter(evt.target.value))}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 360px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Btn = styled.button`\n  color: orangered;\n  font-size: 12px;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redax/contacts/operations';\nimport {\n  FormStyle,\n  ErrMessage,\n  Lable,\n  Btn,\n} from 'components/ContactForm/ContactForm.styled';\n\nconst nameRegex =\n  \"^[a-zA-Zа-щьюяґєіїА-ЩЬЮЯҐЄІЇ]+(([' \\\\-][a-zA-Zа-щьюяґєіїА-ЩЬЮЯҐЄІЇ ])?[a-zA-Zа-щьюяґєіїА-ЩЬЮЯҐЄІЇ]*)*$\";\nconst phoneRegex = '^([+]?[s0-9]+)?(d{3}|[(]?[0-9]+[)])?([-]?[s]?[0-9])+$';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Name is too Short!')\n    .matches(nameRegex, 'Name is not valid')\n    .required('Name is required')\n    .trim(),\n  number: Yup.string()\n    .matches(phoneRegex, 'Phone number is not valid')\n    .length(13, 'Phone number is not valid')\n    .required('Phone number is required')\n    .trim(),\n});\n\nexport const Modal = ({ id, name, number, onClose }) => {\n  const dispatch = useDispatch();\n  const handleChange = contact => {\n    dispatch(updateContact(id, contact));\n  };\n  return (\n    <Formik\n      initialValues={{ name, number }}\n      validationSchema={contactSchema}\n      onSubmit={(values, actions) => {\n        handleChange(values);\n        console.log(values);\n        actions.resetForm();\n      }}\n    >\n      <FormStyle>\n        <Btn onClick={onClose}>Close</Btn>\n\n        <Lable>\n          Name\n          <Field name=\"name\" type=\"text\" />\n          <ErrMessage name=\"name\" component=\"div\" />\n        </Lable>\n        <Lable>\n          Number\n          <Field name=\"number\" type=\"tel\" />\n          <ErrMessage name=\"number\" component=\"div\" />\n        </Lable>\n        <Btn type=\"submit\">Add change</Btn>\n      </FormStyle>\n    </Formik>\n  );\n};\n","import { deleteContact } from 'redax/contacts/operations';\nimport { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Modal } from 'components/Modal/Modal';\nimport { Btn, Item } from 'components/ContactList/ContactList.styled';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <Item>\n      {name}: {number}\n      <div>\n        <Btn type=\"button\" onClick={() => setShowModal(true)}>\n          Сhange\n        </Btn>\n        <Btn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </Btn>\n      </div>\n      {showModal &&\n        createPortal(\n          <Modal\n            id={id}\n            name={name}\n            number={number}\n            onClose={() => setShowModal(false)}\n          />,\n          document.body\n        )}\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { List } from './ContactList.styled';\nimport { selectFilterContacts } from 'redax/contacts/selectors';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilterContacts);\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redax/contacts/operations';\nimport { useEffect } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <ContactFilter title=\"Find contacts by name\" />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["FormStyle","styled","Form","_templateObject","_taggedTemplateLiteral","ErrMessage","ErrorMessage","_templateObject2","Lable","_templateObject3","Btn","_templateObject4","Section","_ref","title","children","_jsxs","_Fragment","_jsx","selectContacts","state","contacts","items","selectFilter","filter","selectFilterContacts","createSelector","el","name","toLowerCase","includes","contactSchema","Yup","shape","min","matches","required","trim","number","length","ContactForm","dispatch","useDispatch","useSelector","onAdd","contact","find","toast","concat","addContact","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","Field","type","component","placeholder","Label","ContactFilter","value","onChange","evt","changeFilter","target","List","Item","Modal","id","onClose","updateContact","console","log","onClick","ContactItem","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","deleteContact","createPortal","document","body","ContactList","map","Contacts","useEffect","fetchContacts"],"sourceRoot":""}